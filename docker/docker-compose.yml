version: '3'
networks:
    internal:

services:
    tmp:
        image: busybox
        command: chmod -R 777 /tmp/docker
        volumes:
            - /tmp/docker/
    nginx:
        image: nginx:stable-alpine
        container_name: nginx
        ports:
            - "80:80"
        volumes:
            - ./dev:/var/www
            - ./config/nginx:/etc/nginx/conf.d
            - ./data/logs:/var/log/nginx/
        depends_on:
            - php
        networks:
            - internal
    dev_redis:
        image: redis
        command: redis-server /etc/redis.conf
        container_name: dev_redis
        volumes:
            - ./config/redis/redis.conf:/etc/redis.conf
        volumes_from:
            - tmp
    php:
        image: php:8.3
        build:
            context: ./config/php
            dockerfile: Dockerfile
        container_name: php
        depends_on:
            - dev_redis
            - postgres
        volumes:
            - ./dev:/var/www
            - ./config/php/php.ini:/usr/local/etc/php/php.ini
        ports:
            - "9000:9000"
        networks:
            - internal
        volumes_from:
            - tmp
    #    mysql:
    #        image: mysql:latest
    #        container_name: mysql
    #        restart: unless-stopped
    #        command: ["mysqld", "--mysql-native-password=ON"]
    #        # command: --innodb_use_native_aio=0
    #        ports:
    #            - "3306:3306"
    #        volumes:
    #            - ./database/mysql:/var/lib/mysql
    #        environment:
    #            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    #        networks:
    #            - internal
    postgres:
        image: postgres:latest
        container_name: postgres
        command: "postgres -c fsync=off -c full_page_writes=off -c synchronous_commit=OFF"
        ports:
            - "5432:5432"
        volumes:
            - ./database/postgres:/data/postgres
        networks:
            - internal
        environment:
            POSTGRES_HOST: localhost
            POSTGRES_HOST_AUTH_METHOD: trust
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            PGDATA : /data/postgres
            # docker run --name pstgres -e POSTGRES_PASSWORD=rgfly -d postgres
#    phpmyadmin:
#        container_name: phpmyadmin
#        image: phpmyadmin
#        restart: always
#        links:
#            - mysql
#        ports:
#            - "8082:80"
#        environment:
#            - PMA_ARBITRARY=1
#        networks:
#            - internal
