# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    hwi_oauth.connect.registration_form: ''
    auto_login: true
    app.datetime_format: 'D, d M Y H:i'
    app.date_format: 'M d, Y'
    locale: 'en'
    default_timezone: 'Europe/Kyiv'
    app.theme: '%env(APP_THEME)%' # theme dir
    user_storage_dir: '%kernel.project_dir%/public/storage/user'
    entry_storage_dir: '%kernel.project_dir%/public/storage/entry'
    carrier_storage_dir: '%kernel.project_dir%/public/storage/carrier'
    private_storage: '%kernel.project_dir%/var/storage'
    product_storage_dir: 'storage/product'
    user_storage_picture: 'storage/user/picture'
    market_storage_logo: 'storage/market/logo'
    entry_storage_picture: 'storage/entry/picture'
    product_storage_picture: 'storage/product/picture'
    app.notifications.subject: '%env(EMAIL_SUBJECT)%'
    app.notifications.email_sender: '%env(EMAIL_SENDER)%'
    app.notifications.email_sender_name: '%env(EMAIL_SENDER_NAME)%'
    app.elastic.dsn: '%env(ELASTIC_DSN)%'
    app.elastic.index: '%env(ELASTIC_INDEX)%'
    app.hostip.url: '%env(HOST_API_URL)%'
    app.redis.dsn: '%env(REDIS_SOCKET)%'
    s3.key: '%env(S3_KEY)%'
    s3.app_key: '%env(S3_APP_KEY)%'
    s3.name: '%env(S3_NAME)%'
    s3.bucket: '%env(S3_BUCKET)%'

services:
    Symfony\Component\HttpFoundation\Session\Storage\Handler\RedisSessionHandler:
        arguments:
            - '@Redis'
            - { 'prefix': 'rgfly_', 'ttl': 604800 }
    Redis:
        class: \Redis
        calls:
            - connect:
                  - '%env(REDIS_SOCKET)%'
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
#        bind:
#            string $storage: '%private_storage%'
#            string $emailSender: '%app.notifications.email_sender%'
#            string $emailSenderName: '%app.notifications.email_sender_name%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Migrations/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
